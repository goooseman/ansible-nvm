- name: Install Node.js lts
  shell: ". ./nvm.sh; nvm install --lts"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version == 'lts' and (ansible_os_family != 'Darwin' or ansible_architecture != 'arm64')

- name: Install Node.js latest
  shell: ". ./nvm.sh; nvm install node"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version == 'latest' and (ansible_os_family != 'Darwin' or ansible_architecture != 'arm64')

- name: Install Node.js {{ nvm_node_version }}
  shell: ". ./nvm.sh; nvm install {{ nvm_node_version }}"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version != 'latest' and nvm_node_version != 'lts' and (ansible_os_family != 'Darwin' or ansible_architecture != 'arm64')

- name: Install Node.js lts (ARM Mac)
  shell: "arch -x86_64 bash -c 'source ./nvm.sh;  nvm install --lts'"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version == 'lts' and ansible_os_family == 'Darwin' and ansible_architecture == 'arm64'
- name: Install Node.js latest (ARM Mac)
  shell: "arch -x86_64 bash -c 'source ./nvm.sh; nvm install node'"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version == 'latest' and ansible_os_family == 'Darwin' and ansible_architecture == 'arm64'

- name: Install Node.js (ARM Mac) {{ nvm_node_version }}
  shell: "arch -x86_64 bash -c 'source ./nvm.sh; nvm install {{ nvm_node_version }}'"
  args:
    chdir: "{{ nvm_install_path }}"
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stderr"
  when: nvm_node_version != 'latest' and nvm_node_version != 'lts' and ansible_os_family == 'Darwin' and ansible_architecture == 'arm64'
